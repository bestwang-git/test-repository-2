unit-test {
   test-suite first-test {
     description "A set of tests to validate NETCONF locking is working
          correctly."

     setup [
       $$server ="test1"
       $$admin = "andy"
       $$user1 = "andy"
       $$pass1 = "fredlow"
       $$user2 = "andy2"
       $$pass2 = "fredlow"
       $$testlog = "$HOME/tests/first-test.log"
       $$testmod = "test"

       start-session session-A
       start-session session-B
     ]

     cleanup [
       stop-session session-A
       stop-session session-B
     ]

     run-test locks

     test locks {

       description "Use 2 sessions to test global locks on the
          candidate and running datastores. Expects the server
          to already be started with --module=test
          and --access-control=off."

       step 1 {
         description "session A locks the running config;
           needs to lock candidate too, but does not!"
         session-name session-A
         result-type ok
         command "lock target=running"
       }

       step 2 {
         description "session B tries to lock the running config"
         session-name session-B
         result-type error
         result-error-tag lock-denied
         result-error-info session-id
         command "lock target=running"
       }

       step 3 {
         description "session A tries to write to the target config"
         session-name session-A
         result-type ok
         command "merge /uint8.1 value=10"
       }

       step 4 {
         description "session B tries to write to the target config
           candidate is not locked so this should work"
         session-name session-B
         result-type ok
         command "merge /uint8.1 value=12"
       }

       step 5 {
         description "session B tries to commit the candidate to running
           running is locked so this should fail"
         session-name session-B
         result-type error
         result-error-tag in-use
         command "commit"
       }
  
       step 6 {
         description "session A tries to lock the candidate config
           this should fail since the candidate is dirty"
         session-name session-A
         result-type error
         result-error-tag resource-denied
         command "lock target=candidate"
       }
  
       step 7 {
         description "session B tries to lock the candidate config
           this should fail since the candidate is dirty"
         session-name session-B
         result-type error
         result-error-tag resource-denied
         command "lock target=candidate"
       }

       step 8 {
         description "session B issues a discard-changes"
         session-name session-B
         result-type ok
         command "discard-changes"
       }
  
       step 9 {
         description "session A issues a discard-changes"
         session-name session-A
         result-type ok
         command "discard-changes"
       }
  
       step 10 {
         description "session B locks the candidate config"
         session-name session-B
         result-type ok
         command "lock target=candidate"
       }
  
       step 11 {
         description "session A tries to lock the candidate config,
           which should fail because it is already locked"
         session-name session-A
         result-type error
         result-error-tag lock-denied
         result-error-info session-id
         command "lock target=candidate"
       }

       step 12 {
         description "session A tries to write to the target config,
           which could fail because candidate is locked"
         session-name session-A
         result-type error
         result-error-tag in-use
         command "merge /uint8.1 value=10"
       }

       step 13 {
         description "session B tries to write to the target config"
         session-name session-B
         result-type ok
         command "merge /uint8.1 value=12"
       }

       step 14 {
         description "session A tries to commit the candidate to running,
           candidate is locked by B so this should fail"
         session-name session-A
         result-type error
         result-error-tag in-use
         command "commit"
       }

       step 15 {
         description "session B tries to commit the candidate to running,
           running is locked by A so this should fail"
         session-name session-B
         result-type error
         result-error-tag in-use
         command "commit"
       }

       step 16 {
         description "session A tries to discard-changes,
           candidate is locked by B so this should fail"
         session-name session-A
         result-type error
         result-error-tag in-use
         command "discard-changes"
       }

       step 17 {
         description "session A tries to unlock candidate,
           candidate is locked by B so this should fail"
         session-name session-A
         result-type error
         result-error-tag in-use
         command "unlock target=candidate"
       }

       step 18 {
         description "session B tries to unlock running,
           which is locked by A so this should fail"
         session-name session-B
         result-type error
         result-error-tag in-use
         command "unlock target=running"
       }

       step 19 {
         description "session B unlocks candidate"
         session-name session-B
         result-type ok
         command "unlock target=candidate"
       }

       step 20 {
         description "session A unlocks candidate"
         session-name session-A
         result-type ok
         command "unlock target=running"
       }

       step 21 {
         description "session A commits nothing due to
            discard-changes from B"
         session-name session-A
         result-type ok
         command "commit"
       }

     }
   }  
}
